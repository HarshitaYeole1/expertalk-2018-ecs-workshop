# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/xenial64"
  config.vm.box_version = "20181105.0.0"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  config.vm.network "forwarded_port", guest: 8080, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  config.vm.synced_folder "..", "/home/vagrant/repo"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.

  config.vm.provision "apt-update", type: "shell", inline: <<-SHELL
    apt-get update
  SHELL

  config.vm.provision "install-pip3", type: "shell", inline: <<-SHELL
    apt-get install -y python3-pip
  SHELL

  config.vm.provision "install-jq", type: "shell", inline: <<-SHELL
    apt-get install -y jq
  SHELL

  config.vm.provision "install-docker", type: "shell", inline: <<-SHELL
    apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    apt-get update
    apt-get install -y docker-ce="18.06.1~ce~3-0~ubuntu"
    usermod -aG docker vagrant
  SHELL

  config.vm.provision "pull-jenkins-image", type: "shell", inline: <<-SHELL
    docker pull jenkins/jenkins:lts
  SHELL

  config.vm.provision "install-csvtool", type: "shell", inline: <<-SHELL
    apt-get install -y csvtool
  SHELL

  config.vm.provision "install-zsh", type: "shell", inline: <<-SHELL
    apt-get install -y zsh
    chsh -s $(which zsh) vagrant
  SHELL

  config.vm.provision "setup-oh-my-zsh", type: "shell", privileged: false, inline: <<-SHELL
    rm -rf ~/.oh-my-zsh
    git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
    cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
    echo 'PROMPT="%{$fg[red]%}%n%{$reset_color%} ${PROMPT}"' >> ~/.zshrc
    echo 'export PATH=${HOME}/.local/bin:${HOME}/bin:${PATH}' >> ~/.zshrc
    echo 'export LC_ALL="en_US.UTF-8"' >> ~/.zshrc
    echo 'export LC_CTYPE="en_US.UTF-8"' >> ~/.zshrc
  SHELL

  config.vm.provision "install-terraform", type: "shell", inline: <<-SHELL
    apt-get install -y unzip
    cd /tmp
    wget https://releases.hashicorp.com/terraform/0.11.10/terraform_0.11.10_linux_amd64.zip
    unzip -d /usr/local/bin terraform_0.11.10_linux_amd64.zip
  SHELL

  config.vm.provision "install-aws-cli", type: "shell", privileged: false, inline: <<-SHELL
    echo "alias python=python3" >> ~/.zshrc
    pip3 install awscli --upgrade --user
  SHELL

  config.vm.provision "setup-virtualenv", type: "shell", privileged: false, inline: <<-SHELL
    pip3 install virtualenv
  SHELL

  config.vm.provision "copy-credentials", type: "file", source: "~/accessKeys.csv", destination: "/tmp/accessKeys.csv"

  config.vm.provision "set-credentials", type: "shell", privileged: false, inline: <<-SHELL
    ACCESS_KEY="$(csvtool sub 2 1 1 1 /tmp/accessKeys.csv)"
    SECRET_KEY="$(csvtool sub 2 2 1 1 /tmp/accessKeys.csv)"

    aws configure set aws_access_key_id ${ACCESS_KEY}
    aws configure set aws_secret_access_key ${SECRET_KEY}
    aws configure set default.region us-east-1
    aws configure set default.output json
  SHELL

  # NOTE: If your id_rsa is not setup on github, then update to a key which is configured on Github.
  config.vm.provision "copy-git-ssh-key", type: "file", source: "~/.ssh/id_rsa", destination: "~/.ssh/id_rsa"

  # NOTE: Please copy workspace_config.template to your user home and substitute the required values.
  config.vm.provision "copy-workshop-config", type: "file", source: "~/workspace_config", destination: "~/workspace_config"
end
